// <auto-generated />
using System;
using MailSubscriptionsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailSubscriptionsApi.Migrations
{
    [DbContext(typeof(SubscriptionsContext))]
    [Migration("20190209231919_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MailSubscriptionsApi.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TopicId");

                    b.Property<string>("UserId");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("MailSubscriptionsApi.Models.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName");

                    b.HasKey("TopicId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicId = 1,
                            DisplayName = "ASP.NET Core"
                        },
                        new
                        {
                            TopicId = 2,
                            DisplayName = "Docker"
                        },
                        new
                        {
                            TopicId = 3,
                            DisplayName = "TypeScript"
                        },
                        new
                        {
                            TopicId = 4,
                            DisplayName = "Vanilla JS"
                        },
                        new
                        {
                            TopicId = 5,
                            DisplayName = "Adobe Experience Manager"
                        },
                        new
                        {
                            TopicId = 6,
                            DisplayName = "Node.js"
                        });
                });

            modelBuilder.Entity("MailSubscriptionsApi.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("UnsubscribeToken");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MailSubscriptionsApi.Models.Subscription", b =>
                {
                    b.HasOne("MailSubscriptionsApi.Models.Topic", "Topic")
                        .WithMany("Subscriptions")
                        .HasForeignKey("TopicId");

                    b.HasOne("MailSubscriptionsApi.Models.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
